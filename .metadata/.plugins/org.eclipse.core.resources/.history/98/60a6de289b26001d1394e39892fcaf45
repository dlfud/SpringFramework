package com.example.board.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.board.domain.vo.ReplyVO;
import com.example.board.service.ReplyService;

import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j;

@RestController
@RequiredArgsConstructor
@Log4j
@RequestMapping("/replies/*")
public class ReplyController {
	private final ReplyService replyService;
	
	//헤더에 담겨서 오면 @ReauestBody
	//url 에 담겨서 오면 @PathVariable
	
	//댓글 등록
	//consumes : 외부에서 전달받을 데이터 타입
	//@RequestBody : json으로 전달받은 데이터를 필드에 매핑해줌, json에 key값과 필드의 이름이 같아야 매핑이 됨
	//produces : 결과 리턴할 타입
	//ResponseEntity<String> : String 은 리턴할 타입(produces에 있는 타입)
	@PostMapping(value="/new", consumes="application/json", produces= {MediaType.TEXT_PLAIN_VALUE})
	public ResponseEntity<String> create(@RequestBody ReplyVO replyVO) {
		log.info("create... : " + replyVO);
		return replyService.register(replyVO) ? new ResponseEntity<>("success", HttpStatus.OK) : new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	
	//게시글 댓글 전체 조회
	//@PathVariable("bno") : 경로에 bno라는게 있으면 뒤에 변수에 넣어라
	@GetMapping(value="/{bno}", produces= {MediaType.APPLICATION_XML_VALUE})
	public ResponseEntity<List<ReplyVO>> getList(@PathVariable("bno") Long bno) {
		log.info("getList... : " + bno);
		return new ResponseEntity<>(replyService.findAllByBNO(bno), HttpStatus.OK);
	}
}
